{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/smolensky/Projects/personal/pantry-next/pages/recipes.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../comps/Layout';\n\nvar RecipeIndex = function RecipeIndex() {\n  var router = useRouter();\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, router.query.title), __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Recipes\")), __jsx(\"div\", {\n    className: \"col-lg-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"recipe-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"recipe-card__meta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nRecipeIndex.getInitialProps = function _callee(context) {\n  var query, queryPath, replaceChar, cleanPath, response, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          cleanPath = function _cleanPath() {\n            return cleanedPath = queryPath.replace(/%2C|%20/gi, function (matched) {});\n          };\n\n          query = context.query.q.query;\n          queryPath = context.asPath; //clean up queryPath to match better what the api expects\n\n          replaceChar = {\n            \"%2C\": \",\",\n            \"%20\": \"+\"\n          };\n          console.log(queryPath); //console.log(query, context.pathname, context.asPath, context.res); undefined, /recipes, /recipes?q=flour, undefined\n\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.spoonacular.com/recipes/findByIngredients?ingredients=\".concat(query, \"&apiKey=\").concat(process.env.API_KEY)));\n\n        case 7:\n          response = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 10:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            recipes: data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default RecipeIndex;","map":{"version":3,"sources":["/Users/smolensky/Projects/personal/pantry-next/pages/recipes.js"],"names":["useRouter","Layout","RecipeIndex","router","query","title","getInitialProps","context","cleanPath","cleanedPath","queryPath","replace","matched","q","asPath","replaceChar","console","log","fetch","process","env","API_KEY","response","json","data","recipes"],"mappings":";;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,KAAlB,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF,CAJF,CAFF,CADF;AAsBH,CAzBD;;AA2BAH,WAAW,CAACI,eAAZ,GAA8B,iBAAeC,OAAf;AAAA,qCASnBC,SATmB;AAAA;AAAA;AAAA;AAAA;AASnBA,UAAAA,SATmB,yBASR;AAClB,mBAAOC,WAAW,GAAGC,SAAS,CAACC,OAAV,CAAkB,WAAlB,EAA+B,UAASC,OAAT,EAAiB,CAEpE,CAFoB,CAArB;AAGD,WAb2B;;AACrBR,UAAAA,KADqB,GACZG,OAAO,CAACH,KAAR,CAAcS,CADF,CACrBT,KADqB;AAEtBM,UAAAA,SAFsB,GAEVH,OAAO,CAACO,MAFE,EAG5B;;AACMC,UAAAA,WAJsB,GAIR;AAClB,mBAAO,GADW;AAElB,mBAAO;AAFW,WAJQ;AAe5BC,UAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ,EAf4B,CAgB5B;;AAhB4B;AAAA,2CAiBLQ,KAAK,6EAAsEd,KAAtE,qBAAsFe,OAAO,CAACC,GAAR,CAAYC,OAAlG,EAjBA;;AAAA;AAiBtBC,UAAAA,QAjBsB;AAAA;AAAA,2CAkBTA,QAAQ,CAACC,IAAT,EAlBS;;AAAA;AAkBtBC,UAAAA,IAlBsB;AAAA,2CAsBrB;AACHC,YAAAA,OAAO,EAAED;AADN,WAtBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AA2BA,eAAetB,WAAf","sourcesContent":["import {useRouter} from 'next/router';\nimport Layout from '../comps/Layout';\n\nconst RecipeIndex = () => {\n    const router = useRouter();\n\n    return(\n      <Layout>\n        <h1>{router.query.title}</h1>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1>Recipes</h1>\n          </div>\n          <div className=\"col-lg-3\">\n            <div className=\"recipe-card\">\n              {/* <img className=\"img-fluid\" src={props.data.image} alt={props.data.title} />\n              <h2>{props.data.title}</h2> */}\n              <div className=\"recipe-card__meta\">\n                <ul>\n                  {/* <li>{props.data.readyInMinutes} min</li>\n                  <li>{props.data.servings} people</li> */}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n    </Layout>\n    )\n}\n\nRecipeIndex.getInitialProps = async function(context){\n  const {query} = context.query.q;\n  const queryPath = context.asPath;\n  //clean up queryPath to match better what the api expects\n  const replaceChar = {\n    \"%2C\": \",\",\n    \"%20\": \"+\"\n  }\n\n  function cleanPath(){\n    return cleanedPath = queryPath.replace(/%2C|%20/gi, function(matched){\n      \n    })\n  }\n  \n  console.log(queryPath);\n  //console.log(query, context.pathname, context.asPath, context.res); undefined, /recipes, /recipes?q=flour, undefined\n  const response = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${query}&apiKey=${process.env.API_KEY}`);\n  const data = await response.json();\n\n  // console.log(transformQuery);\n\n  return {\n      recipes: data\n  };\n};\n\nexport default RecipeIndex;"]},"metadata":{},"sourceType":"module"}