{"ast":null,"code":"var _jsxFileName = \"/Users/smolensky/Projects/personal/pantry-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../comps/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nconst labelStyle = {\n  color: '#764248',\n  fontWeight: 'bold',\n  textTransform: 'uppercase',\n  fontSize: '1.200rem'\n};\nvar path = 'https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples,+flour,+sugar&number=2&apiKey=';\nvar apiKey = \"e4dae24ad2ad4d6cb33e377041aa1e0b\";\nvar fullPath = path + apiKey;\n\nconst PostLink = props => __jsx(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${props.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }\n}, props.id)));\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}, \"API Working?\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, \"for(const recipe in recipes)\", console.log(`${recipe}`)));\n\nIndex.getInitialProps = async function () {\n  const response = await fetch(fullPath);\n  const data = await response.json();\n  console.log(data[0].id);\n  return {\n    recipes: data.map(entry => entry.id)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/smolensky/Projects/personal/pantry-next/pages/index.js"],"names":["Layout","Link","fetch","labelStyle","color","fontWeight","textTransform","fontSize","path","apiKey","fullPath","PostLink","props","id","Index","console","log","recipe","getInitialProps","response","data","json","recipes","map","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,SADQ;AAEfC,EAAAA,UAAU,EAAE,MAFG;AAGfC,EAAAA,aAAa,EAAE,WAHA;AAIfC,EAAAA,QAAQ,EAAG;AAJI,CAAnB;AAOA,IAAIC,IAAI,GAAG,yGAAX;AACA,IAAIC,MAAM,GAAG,kCAAb;AAEA,IAAIC,QAAQ,GAAGF,IAAI,GAAGC,MAAtB;;AAEA,MAAME,QAAQ,GAAGC,KAAK,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKA,KAAK,CAACC,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,KAAK,CAACC,EAAV,CADF,CADJ,CADJ;;AAQA,MAAMC,KAAK,GAAGF,KAAK,IACf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEIG,OAAO,CAACC,GAAR,CAAa,GAAEC,MAAO,EAAtB,CAFJ,CAFF,CADJ;;AAkBEH,KAAK,CAACI,eAAN,GAAwB,kBAAgB;AACtC,QAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACQ,QAAD,CAA5B;AACA,QAAMU,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEAN,EAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAAC,CAAD,CAAJ,CAAQP,EAApB;AAEA,SAAO;AACHS,IAAAA,OAAO,EAAEF,IAAI,CAACG,GAAL,CAASC,KAAK,IAAGA,KAAK,CAACX,EAAvB;AADN,GAAP;AAGH,CATC;;AAWF,eAAeC,KAAf","sourcesContent":["import Layout from '../comps/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst labelStyle = {\n    color: '#764248',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    fontSize : '1.200rem'\n}\n\nvar path = 'https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples,+flour,+sugar&number=2&apiKey=';\nvar apiKey = \"e4dae24ad2ad4d6cb33e377041aa1e0b\";\n\nvar fullPath = path + apiKey;\n\nconst PostLink = props => (\n    <li>\n        <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n          <a>{props.id}</a>\n        </Link>\n    </li>\n)\n\nconst Index = props => (\n    <Layout>\n      <h1>API Working?</h1>\n      <ul>\n      for(const recipe in recipes){\n          console.log(`${recipe}`)\n      }\n        {/* {props.recipes.map(recipe => (\n          <li key={recipe.id}>\n            <Link href=\"/p/[id]\" as={`/p/${recipe.id}`}>\n              <a>{recipe.title}</a>\n            </Link>\n          </li>\n        ))} */}\n      </ul>\n    </Layout>\n  );\n\n  Index.getInitialProps = async function(){\n    const response = await fetch(fullPath);\n    const data = await response.json();\n\n    console.log(data[0].id);\n\n    return {\n        recipes: data.map(entry=> entry.id)\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}