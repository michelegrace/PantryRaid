{"ast":null,"code":"var _jsxFileName = \"/Users/smolensky/Projects/personal/pantry-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../comps/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nconst labelStyle = {\n  color: '#764248',\n  fontWeight: 'bold',\n  textTransform: 'uppercase',\n  fontSize: '1.200rem'\n};\nvar path = 'https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples,+flour,+sugar&number=2&apiKey=';\nvar apiKey = \"e4dae24ad2ad4d6cb33e377041aa1e0b\";\nvar fullPath = path + apiKey;\n\nconst PostLink = props => __jsx(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${props.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }\n}, props.id)));\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, __jsx(\"form\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"form-group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}, __jsx(\"label\", {\n  for: \"ingredient\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }\n}, \"Ingredients\"), __jsx(\"input\", {\n  type: \"text\",\n  name: \"ingredient\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }\n})), __jsx(\"button\", {\n  type: \"submit\",\n  value: \"Submit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }\n}, \"Submit\")), __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}, \"API Working?\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}, props.recipes.map(recipe => __jsx(\"li\", {\n  key: recipe.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 11\n  }\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${recipe.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 15\n  }\n}, recipe.title))))));\n\nIndex.getInitialProps = async function () {\n  const response = await fetch(fullPath);\n  const data = await response.json();\n  return {\n    recipes: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/smolensky/Projects/personal/pantry-next/pages/index.js"],"names":["Layout","Link","fetch","labelStyle","color","fontWeight","textTransform","fontSize","path","apiKey","fullPath","PostLink","props","id","Index","recipes","map","recipe","title","getInitialProps","response","data","json"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,SADQ;AAEfC,EAAAA,UAAU,EAAE,MAFG;AAGfC,EAAAA,aAAa,EAAE,WAHA;AAIfC,EAAAA,QAAQ,EAAG;AAJI,CAAnB;AAOA,IAAIC,IAAI,GAAG,yGAAX;AACA,IAAIC,MAAM,GAAG,kCAAb;AAEA,IAAIC,QAAQ,GAAGF,IAAI,GAAGC,MAAtB;;AAEA,MAAME,QAAQ,GAAGC,KAAK,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKA,KAAK,CAACC,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,KAAK,CAACC,EAAV,CADF,CADJ,CADJ;;AAQA,MAAMC,KAAK,GAAGF,KAAK,IACf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAO,EAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,IAAI,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CADJ,EAOI;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADA,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACvB;AAAI,EAAA,GAAG,EAAEA,MAAM,CAACJ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKI,MAAM,CAACJ,EAAG,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAII,MAAM,CAACC,KAAX,CADF,CADF,CADD,CADH,CAXF,CADJ;;AAwBEJ,KAAK,CAACK,eAAN,GAAwB,kBAAgB;AACtC,QAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACQ,QAAD,CAA5B;AACA,QAAMW,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEA,SAAO;AACHP,IAAAA,OAAO,EAAEM;AADN,GAAP;AAGH,CAPC;;AASF,eAAeP,KAAf","sourcesContent":["import Layout from '../comps/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst labelStyle = {\n    color: '#764248',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    fontSize : '1.200rem'\n}\n\nvar path = 'https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples,+flour,+sugar&number=2&apiKey=';\nvar apiKey = \"e4dae24ad2ad4d6cb33e377041aa1e0b\";\n\nvar fullPath = path + apiKey;\n\nconst PostLink = props => (\n    <li>\n        <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n          <a>{props.id}</a>\n        </Link>\n    </li>\n)\n\nconst Index = props => (\n    <Layout>\n    <form>\n        <div className=\"form-group\">\n            <label for=\"ingredient\">\n                Ingredients\n            </label>\n            <input type=\"text\" name=\"ingredient\"/>\n        </div>\n        <button type=\"submit\" value=\"Submit\">Submit</button>\n    </form>\n      <h1>API Working?</h1>\n      <ul>\n        {props.recipes.map(recipe => (\n          <li key={recipe.id}>\n            <Link href=\"/p/[id]\" as={`/p/${recipe.id}`}>\n              <a>{recipe.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n\n  Index.getInitialProps = async function(){\n    const response = await fetch(fullPath);\n    const data = await response.json();\n\n    return {\n        recipes: data\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}