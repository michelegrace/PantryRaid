{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/smolensky/Projects/personal/pantry-next/pages/recipes.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../comps/Layout';\n\nvar RecipeIndex = function RecipeIndex() {\n  var router = useRouter();\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, router.query.title), __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Recipes\")), __jsx(\"div\", {\n    className: \"col-lg-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"recipe-card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"recipe-card__meta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nRecipeIndex.getInitialProps = function _callee() {\n  var apiKey, response, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apiKey = \"e4dae24ad2ad4d6cb33e377041aa1e0b\"; // const {query} = context.query.q;\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.spoonacular.com/recipes/findByIngredients/ingredients=flour&apiKey=\".concat(apiKey)));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            recipes: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default RecipeIndex;","map":{"version":3,"sources":["/Users/smolensky/Projects/personal/pantry-next/pages/recipes.js"],"names":["useRouter","Layout","RecipeIndex","router","query","title","getInitialProps","apiKey","fetch","response","json","data","recipes"],"mappings":";;;;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,KAAlB,CADJ,EAEJ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF,CAJF,CAFI,CADJ;AAsBH,CAzBD;;AA2BAH,WAAW,CAACI,eAAZ,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpBC,UAAAA,MAFoB,GAEX,kCAFW,EAG1B;;AAH0B;AAAA,2CAIHC,KAAK,0FAAmFD,MAAnF,EAJF;;AAAA;AAIpBE,UAAAA,QAJoB;AAAA;AAAA,2CAKPA,QAAQ,CAACC,IAAT,EALO;;AAAA;AAKpBC,UAAAA,IALoB;AAAA,2CAOnB;AACHC,YAAAA,OAAO,EAAED;AADN,WAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAYA,eAAeT,WAAf","sourcesContent":["import {useRouter} from 'next/router';\nimport Layout from '../comps/Layout';\n\nconst RecipeIndex = () => {\n    const router = useRouter();\n\n    return(\n        <Layout>\n            <h1>{router.query.title}</h1>\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Recipes</h1>\n      </div>\n      <div className=\"col-lg-3\">\n        <div className=\"recipe-card\">\n          {/* <img className=\"img-fluid\" src={props.data.image} alt={props.data.title} />\n          <h2>{props.data.title}</h2> */}\n          <div className=\"recipe-card__meta\">\n            <ul>\n              {/* <li>{props.data.readyInMinutes} min</li>\n              <li>{props.data.servings} people</li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n    )\n}\n\nRecipeIndex.getInitialProps = async function(){\n\n    const apiKey = \"e4dae24ad2ad4d6cb33e377041aa1e0b\";\n    // const {query} = context.query.q;\n    const response = await fetch(`https://api.spoonacular.com/recipes/findByIngredients/ingredients=flour&apiKey=${apiKey}`);\n    const data = await response.json();\n\n    return {\n        recipes: data\n    };\n};\n\nexport default RecipeIndex;"]},"metadata":{},"sourceType":"module"}