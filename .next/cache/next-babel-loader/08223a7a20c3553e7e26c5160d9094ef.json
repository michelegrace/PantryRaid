{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/smolensky/Projects/personal/pantry-next/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../comps/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nvar labelStyle = {\n  color: '#764248',\n  fontWeight: 'bold',\n  textTransform: 'uppercase',\n  fontSize: '1.200rem'\n};\nvar path = 'https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples,+flour,+sugar&number=2&apiKey=';\nvar apiKey = \"e4dae24ad2ad4d6cb33e377041aa1e0b\";\nvar fullPath = path + apiKey;\n\nvar PostLink = function PostLink(props) {\n  return __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(props.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, props.id)));\n};\n\nvar searchForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(searchForm, _React$Component);\n\n  var _super = _createSuper(searchForm);\n\n  function searchForm() {\n    _classCallCheck(this, searchForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  return searchForm;\n}(React.Component);\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    \"for\": \"ingredient\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Ingredients\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"ingredient\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Submit\")), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"API Working?\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, props.recipes.map(function (recipe) {\n    return __jsx(\"li\", {\n      key: recipe.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(recipe.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, recipe.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var response, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(fullPath));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            recipes: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/smolensky/Projects/personal/pantry-next/pages/index.js"],"names":["Layout","Link","fetch","labelStyle","color","fontWeight","textTransform","fontSize","path","apiKey","fullPath","PostLink","props","id","searchForm","React","Component","Index","recipes","map","recipe","title","getInitialProps","response","json","data"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,SADQ;AAEfC,EAAAA,UAAU,EAAE,MAFG;AAGfC,EAAAA,aAAa,EAAE,WAHA;AAIfC,EAAAA,QAAQ,EAAG;AAJI,CAAnB;AAOA,IAAIC,IAAI,GAAG,yGAAX;AACA,IAAIC,MAAM,GAAG,kCAAb;AAEA,IAAIC,QAAQ,GAAGF,IAAI,GAAGC,MAAtB;;AAEA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,eAAQA,KAAK,CAACC,EAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACC,EAAV,CADF,CADJ,CADkB;AAAA,CAAtB;;IAQMC,U;;;;;;;;;;;;EAAmBC,KAAK,CAACC,S;;AAI/B,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAL,KAAK;AAAA,SACf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,WAAI,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAII;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAOI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADA,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB,UAAAC,MAAM;AAAA,WACvB;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACP,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQO,MAAM,CAACP,EAAf,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIO,MAAM,CAACC,KAAX,CADF,CADF,CADuB;AAAA,GAAxB,CADH,CAXF,CADe;AAAA,CAAnB;;AAwBEJ,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACCpB,KAAK,CAACQ,QAAD,CADN;;AAAA;AAChBa,UAAAA,QADgB;AAAA;AAAA,2CAEHA,QAAQ,CAACC,IAAT,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAAA,2CAIf;AACHP,YAAAA,OAAO,EAAEO;AADN,WAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASF,eAAeR,KAAf","sourcesContent":["import Layout from '../comps/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst labelStyle = {\n    color: '#764248',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    fontSize : '1.200rem'\n}\n\nvar path = 'https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples,+flour,+sugar&number=2&apiKey=';\nvar apiKey = \"e4dae24ad2ad4d6cb33e377041aa1e0b\";\n\nvar fullPath = path + apiKey;\n\nconst PostLink = props => (\n    <li>\n        <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n          <a>{props.id}</a>\n        </Link>\n    </li>\n)\n\nclass searchForm extends React.Component{\n    \n}\n\nconst Index = props => (\n    <Layout>\n    <form>\n        <div className=\"form-group\">\n            <label for=\"ingredient\">\n                Ingredients\n            </label>\n            <input type=\"text\" name=\"ingredient\"/>\n        </div>\n        <button type=\"submit\" value=\"Submit\">Submit</button>\n    </form>\n      <h1>API Working?</h1>\n      <ul>\n        {props.recipes.map(recipe => (\n          <li key={recipe.id}>\n            <Link href=\"/p/[id]\" as={`/p/${recipe.id}`}>\n              <a>{recipe.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n\n  Index.getInitialProps = async function(){\n    const response = await fetch(fullPath);\n    const data = await response.json();\n\n    return {\n        recipes: data\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}